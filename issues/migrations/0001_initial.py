# Generated by Django 2.2.5 on 2020-03-04 03:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttachmentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BugType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Coding Error', 'Coding Error'), ('Design Issue', 'Design Issue'), ('Suggestion', 'Suggestion'), ('Documentation', 'Documentation'), ('Hardware', 'Hardware'), ('Query', 'Query')], max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, unique=True)),
                ('username', models.CharField(max_length=25, null=True, unique=True)),
                ('password', models.CharField(max_length=25, null=True)),
                ('level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3')], default=1)),
                ('departmentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.Department')),
            ],
        ),
        migrations.CreateModel(
            name='FunctionalArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('release', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Resolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Pending', 'Pending'), ('Fixed', 'Fixed'), ('Irreproducible', 'Irreproducible'), ('Deferred', 'Deferred'), ('As designed', 'As designed'), ('Withdrawn by reporter', 'Withdrawn by reporter'), ('Need more info', 'Need more info'), ('Disagree with suggestion', 'Disagree with suggestion'), ('Duplicate', 'Duplicate')], default='Pending', max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Severity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('severity', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed')], default='Open', max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachmentID', models.CharField(max_length=1000)),
                ('summary', models.CharField(max_length=500)),
                ('suggestedFix', models.CharField(max_length=500)),
                ('issueDate', models.DateTimeField()),
                ('isAssignedToGroup', models.BooleanField()),
                ('comments', models.CharField(max_length=500)),
                ('resolveByDate', models.DateTimeField()),
                ('testByDate', models.DateTimeField()),
                ('treatedAsDeferred', models.BooleanField()),
                ('reproducible', models.BooleanField()),
                ('assignedToID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_assignedToID', to='issues.Employee')),
                ('bugtypeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.BugType')),
                ('functionalAreaID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.FunctionalArea')),
                ('priorityID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.Priority')),
                ('programID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.Program')),
                ('reportedByID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_reportedByID', to='issues.Employee')),
                ('resolutionID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.Resolution')),
                ('severityID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.Severity')),
                ('statusID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.Status')),
                ('testedByID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_testedByID', to='issues.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='GroupEmployee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.Employee')),
                ('groupID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.Group')),
            ],
        ),
        migrations.AddField(
            model_name='functionalarea',
            name='programID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.Program'),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=500)),
                ('typeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='issues.AttachmentType')),
            ],
        ),
    ]
